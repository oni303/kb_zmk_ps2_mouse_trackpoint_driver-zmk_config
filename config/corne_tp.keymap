/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt { flavor = "tap-preferred"; };

/ {
    combos {
        compatible = "zmk,combos";

        layer3 {
            bindings = <&mo 0>;
            key-positions = <37 40>;
        };
    };

    behaviors {
        hold_tog: hold_tog {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TOG";
            bindings = <&kp>, <&tog>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        ht_balanced: ht_balanced {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_BALANCED";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
        };

        lt_balanced: lt_balanced {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_BALANCED";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
        };

        ht_interrupted: ht_interrupted {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_INTERRUPTED";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-unless-interrupted";
            tapping-term-ms = <200>;
        };

        lt_interrupted: lt_interrupted {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_INTERRUPTED";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-unless-interrupted";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&mt LEFT_ALT TAB  &kp Q       &kp W             &kp E             &kp R                 &kp T              &kp Y          &kp U                    &kp I                    &kp O    &kp P     &kp BSPC
&kp LCTRL         &kp A       &lt_balanced 4 S  &lt_balanced 3 D  &ht_balanced LSHFT F  &kp G              &kp H          &ht_interrupted LSHFT J  &lt_interrupted 5 K      &kp L    &kp SEMI  &kp SQT
&kp LSHIFT        &mt LALT Z  &kp X             &kp C             &kp V                 &kp B              &kp N          &kp M                    &kp COMMA                &kp DOT  &kp FSLH  &kp ESC
                                                &kp LGUI          &lt 2 TAB             &mt LCTRL SPACE    &mt LCTRL RET  &lt 1 ESC                &mt RIGHT_ALT BACKSPACE
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | LCTRL|     |     |     |     |     |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp N1      &kp N2      &kp N3    &kp N4   &kp N5              &kp N6    &kp N7    &kp N8        &kp N9     &kp N0   &kp DEL
&kp LCTRL  &kp K_PREV  &kp K_NEXT  &kp HOME  &kp END  &kp K_PLAY_PAUSE    &kp LEFT  &kp DOWN  &kp UP        &kp RIGHT  &trans   &trans
&sk F1     &sk F2      &sk F3      &sk F4    &sk F5   &sk F6              &sk F7    &sk F8    &sk F9        &sk F10    &sk F11  &sk F12
                                   &kp LGUI  &mo 6    &caps_word          &kp RET   &trans    &kp LEFT_ALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans     &kp EXCL        &kp AT  &kp HASH  &kp DLLR          &kp PRCNT         &kp CARET  &kp AMPS    &kp ASTERISK   &kp LPAR  &kp RPAR  &kp DEL
&kp LCTRL  &kp K_PASTE     &trans  &trans    &kp RA(NUMBER_5)  &kp LS(RA(N0))    &kp MINUS  &kp EQUAL   &kp LBKT       &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &kp C_AC_PASTE  &trans  &trans    &trans            &trans            &kp UNDER  &kp PLUS    &kp LBRC       &kp RBRC  &kp PIPE  &kp TILDE
                                   &kp LGUI  &trans            &kp SPACE         &kp RET    &kp DELETE  &kp RIGHT_ALT
            >;
        };

        numblock {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp NUMBER_0  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &trans        &trans
                        &trans  &trans  &trans    &trans  &trans        &trans
            >;
        };

        function_keys {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp F1  &kp F2   &kp F3   &kp F4   &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp F5  &kp F6   &kp F7   &kp F8   &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp F9  &kp F10  &kp F11  &kp F12  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans  &kp END  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans   &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans   &trans  &kp HOME    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans   &trans  &trans      &trans  &trans  &trans
            >;
        };

        blue_tooth {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans    &trans  &trans  &trans  &trans  &trans  &tog 7
&bt BT_CLR    &trans        &trans        &trans        &trans        &trans    &trans  &trans  &trans  &trans  &trans  &kp C_VOLUME_UP
&trans        &trans        &trans        &trans        &trans        &trans    &trans  &trans  &trans  &trans  &trans  &kp C_VOLUME_DOWN
                                          &trans        &trans        &trans    &trans  &trans  &trans
            >;
        };

        layer_7 {
            bindings = <
&kp ESC  &trans  &trans  &trans        &trans         &trans    &trans  &trans  &trans  &trans  &trans  &tog 7
&trans   &trans  &kp S   &kp D         &kp F          &trans    &trans  &trans  &trans  &trans  &trans  &kp C_VOLUME_UP
&trans   &trans  &trans  &trans        &trans         &trans    &trans  &trans  &trans  &trans  &trans  &kp C_VOLUME_DOWN
                         &kp LEFT_ALT  &mt LSHFT RET  &trans    &trans  &trans  &trans
            >;

            label = "one hand";
        };
    };
};
